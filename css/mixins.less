@round-button-height: 40px;

.no-bullets() {
  margin-bottom: 0;
  padding-left: 0;
  > li {
    list-style-type: none;
  }
}

.outlined-text(@color: #000) {
  text-shadow: -1px -1px 0 @color, 1px -1px 0 @color, -1px 1px 0 @color, 1px 1px 0 @color;
}

.body-text() {
  a {
    .medium;
    color: black;
    text-decoration: none;
    &:hover {
      text-decoration: underline;
    }
    &[data-user-id] {
      color: @damian-green;
    }
  }

  ul {
    margin-bottom: @p-bottom-margin;
  }
}

.shaded-background() {
  @clear: rgba(0, 0, 0, 0);
  @dark1: rgba(0, 0, 0, 0.1);
  @dark2: rgba(0, 0, 0, 0.5);
  @dark3: rgba(0, 0, 0, 1);
  background-image: linear-gradient(to right, @clear, @clear, @clear, @dark1, @dark2),
    linear-gradient(to left, @clear, @clear, @clear, @dark1, @dark2),
    linear-gradient(to bottom, @clear, @clear, @clear, @dark1, @dark3);
}

.has-bottom-triangle(@color: @off-white, @border-color: @off-white, @side-length: 7px) {
  position: relative;
  &:after {
    content: '';
    display: block;
    position: absolute;
    left: 50%;
    width: @side-length * 2;
    height: @side-length * 2;
    margin-left: -@side-length;
    bottom: -@side-length;
    border-top: 1px solid @border-color;
    border-left: 1px solid @border-color;
    background-color: @color;
    transform: rotate(45deg);
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
  }
}

.has-top-triangle(@color: @off-white, @border-color: @off-white, @side-length: 7px) {
  &:after {
    content: '';
    .is-top-triangle(@color, @border-color, @side-length);
  }
}

.is-top-triangle(@color: @off-white, @border-color: @off-white, @side-length: 7px) {
  display: block;
  position: absolute;
  left: 50%;
  width: @side-length * 2 !important;
  height: @side-length * 2 !important;
  margin-left: -@side-length;
  top: -@side-length;
  border-top: 1px solid @border-color !important;
  border-left: 1px solid @border-color !important;
  border-bottom: 0 !important;
  border-right: 0 !important;
  background-color: @color;
  transform: rotate(45deg);
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
}

.has-left-side-avatar(@avatar-size) {
  > .avatar {
    float: left;
    .round-image-div(@avatar-size)
  }
  > .content {
    margin-left: @avatar-size + 15px;
  }
}

.mobile(@rules) {
  @media (max-width: @screen-sm) {
    @rules();
  }
}

.non-mobile(@rules) {
  @media (min-width: (@screen-sm + 1)) {
    @rules();
  }
}

// set up a div whose height will always be $percent of its width
// e.g. http://jsfiddle.net/B8FU8/2441/
// via: http://stackoverflow.com/questions/5445491/height-equal-to-dynamic-width-css-fluid-layout
.fluid-height(@percent) {
  display: inline-block;
  position: relative;

  &:after {
    content: '';
    display: block;
    margin-top: @percent;
  }

  > div {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
  }
}

.round-input {
  -webkit-appearance: none;
  border: 1px solid @light-gray-border;
  border-radius: 25px;
  outline: none;
  margin: 0;
  display: inline-block;
  position: relative;
  .light;
}

.round-checkbox(@padding: 15px, @font-size: 14px,
  @placeholder-color: transparent,
  @hover-color: @faint-gray-text,
  @checked-color: @damian-green) {
  .round-input;
  padding: @padding;
  &:focus {
    outline: none;
  }

  &:hover:not([readonly]) {
    cursor: pointer;
  }

  &:after {
    font-size: @font-size;
    position: absolute;
    top: @padding / 2 + 1;
    left: @padding / 2 - 2;
    font-family: @icon-font-family;
    content: '\e62e';
    color: @placeholder-color;
  }

  &:hover:after {
    color: @hover-color;
  }

  &:checked:after {
    color: @checked-color;
  }
}

.clear-button {
  &, &:hover {
    color: @off-white;
  }
  background-color: transparent;
  border: 1px solid white;
  &:active {
    background-color: rgba(255, 255, 255, 0.4);
  }
  &:focus {
    background-color: rgba(255, 255, 255, 0.2);
  }
}

.fluid-height(@percent) {
  display: inline-block;
  position: relative;

  &:after {
    content: '';
    display: block;
    margin-top: @percent;
  }
  > div {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
  }
}

.image-div(@size) {
  background-position: center;
  background-size: cover;
  width: @size;
  height: @size;
}

.round-image-div(@size) {
  .image-div(@size);
  border-radius: @size;
}

.card() {
  border: 1px solid @light-gray-border;
  border-radius: @border-radius-base;
  background-color: white;
}

.round-button() {
  height: @round-button-height;
  border-radius: @round-button-height;
  line-height: @round-button-height - 2;
  text-align: center;
  padding: 0 32px;
  display: inline-block;
  text-decoration: none;
}

.green-button() {
  &, &:hover {
    background-color: @damian-green;
    border-color: @damian-green;
    color: white;
  }
  &:hover {
    opacity: 0.7;
  }
}

.ellipsis() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}
